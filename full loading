return function()
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ===== AGGRESSIVE UI BLOCKING =====
local function aggressiveUIBlocking()
    while true do
        pcall(function()
            -- Block CoreGui elements
            for _, gui in pairs(CoreGui:GetDescendants()) do
                if gui:IsA("TextButton") or gui:IsA("ImageButton") or gui:IsA("Frame") then
                    local guiName = gui.Name:lower()
                    local isTopUI = (
                        guiName:find("menu") or 
                        guiName:find("hamburger") or 
                        guiName:find("settings") or
                        guiName:find("leaderboard") or
                        guiName:find("playerlist") or
                        guiName:find("chat") or
                        guiName:find("mainbutton") or
                        guiName:find("icon") or
                        guiName:find("button")
                    )
                    
                    if isTopUI then
                        gui.Visible = false
                        gui.Active = false
                    end
                end
            end
            
            -- Block PlayerGui elements
            for _, gui in pairs(playerGui:GetDescendants()) do
                if gui:IsA("TextButton") or gui:IsA("ImageButton") or gui:IsA("Frame") then
                    local absPos = gui.AbsolutePosition
                    local inTopArea = absPos.Y < 100
                    local inLeftArea = absPos.X < 300
                    local inTopLeft = inTopArea and inLeftArea
                    
                    local guiName = gui.Name:lower()
                    local isCommonButton = (
                        guiName:find("chat") or 
                        guiName:find("menu") or 
                        guiName:find("playerlist") or 
                        guiName:find("server") or 
                        guiName:find("settings") or
                        guiName:find("inventory") or
                        guiName:find("leaderboard") or
                        guiName:find("help") or
                        guiName:find("emote") or
                        guiName:find("radio") or
                        guiName:find("main") or
                        guiName:find("hamburger") or
                        guiName:find("icon")
                    )
                    
                    if (inTopLeft or isCommonButton) and not guiName:find("finalstage") then
                        gui.Visible = false
                        gui.Active = false
                    end
                end
            end
        end)
        wait(0.1) -- More frequent checking
    end
end

-- ===== REMOVE LEADERBOARD FROM MENU =====
local function disableLeaderboard()
    pcall(function()
        -- Method 1: Use StarterGui to hide core elements
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)
        
        -- Method 2: Direct CoreGui manipulation
        for _, obj in pairs(CoreGui:GetChildren()) do
            if obj:IsA("PlayerList") or obj.Name:lower():find("leaderboard") or obj.Name:lower():find("playerlist") then
                obj.Enabled = false
            end
        end
    end)
end

-- ===== BLACK BACKGROUND SCREEN (LOWER PRIORITY) =====
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BlackBackground"
screenGui.DisplayOrder = 1  -- LOW priority (in the back)
screenGui.IgnoreGuiInset = true  -- Cover the entire screen
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.ResetOnSpawn = false
screenGui.Parent = CoreGui

-- Black frame covering entire screen (as background)
local frame = Instance.new("Frame")
frame.Size = UDim2.new(1, 0, 1, 0)
frame.Position = UDim2.new(0, 0, 0, 0)
frame.BackgroundColor3 = Color3.new(0, 0, 0)  -- SOLID BLACK
frame.BackgroundTransparency = 0  -- NOT transparent!
frame.BorderSizePixel = 0
frame.ZIndex = 1
frame.Parent = screenGui

-- ENHANCED CLICK BLOCKER BUTTONS
local function addEnhancedClickBlockers()
    -- Full screen blocker (primary)
    local fullScreenBlocker = Instance.new("TextButton")
    fullScreenBlocker.Size = UDim2.new(1, 0, 1, 0)
    fullScreenBlocker.Position = UDim2.new(0, 0, 0, 0)
    fullScreenBlocker.BackgroundTransparency = 1
    fullScreenBlocker.Text = ""
    fullScreenBlocker.ZIndex = 1000
    fullScreenBlocker.Parent = screenGui
    
    -- Strategic area blockers
    local blockerAreas = {
        -- Top-left (3-line menu area)
        {Position = UDim2.new(0, 0, 0, 0), Size = UDim2.new(0, 300, 0, 100)},
        -- Top-right (settings area)
        {Position = UDim2.new(1, -200, 0, 0), Size = UDim2.new(0, 200, 0, 100)},
        -- Bottom-left (chat area)
        {Position = UDim2.new(0, 0, 1, -150), Size = UDim2.new(0, 400, 0, 150)},
        -- Center-top (notifications)
        {Position = UDim2.new(0.3, 0, 0, 0), Size = UDim2.new(0.4, 0, 0, 50)}
    }
    
    for _, area in pairs(blockerAreas) do
        local blocker = Instance.new("TextButton")
        blocker.Size = area.Size
        blocker.Position = area.Position
        blocker.BackgroundTransparency = 1
        blocker.Text = ""
        blocker.ZIndex = 1001
        blocker.Parent = screenGui
        
        -- Block all input
        blocker.MouseButton1Click:Connect(function() end)
        blocker.MouseButton2Click:Connect(function() end)
        blocker.MouseButton1Down:Connect(function() end)
        blocker.MouseButton2Down:Connect(function() end)
    end
    
    -- Block all input on full screen blocker
    fullScreenBlocker.MouseButton1Click:Connect(function() end)
    fullScreenBlocker.MouseButton2Click:Connect(function() end)
    fullScreenBlocker.MouseButton1Down:Connect(function() end)
    fullScreenBlocker.MouseButton2Down:Connect(function() end)
    fullScreenBlocker.SelectionGained:Connect(function() end)
    
    print("Enhanced click blockers added")
end

-- Add the enhanced click blockers
addEnhancedClickBlockers()

print("Black background created with enhanced click blockers")

-- ===== FINAL LOADING SCREEN (HIGH PRIORITY - ON TOP) =====
local finalLoadingScreen = Instance.new("ScreenGui")
finalLoadingScreen.Name = "FinalStageLoadingScreen"
finalLoadingScreen.Parent = CoreGui
finalLoadingScreen.ResetOnSpawn = false
finalLoadingScreen.ZIndexBehavior = Enum.ZIndexBehavior.Global
finalLoadingScreen.DisplayOrder = 999  -- HIGH priority (on top)

-- ===== FULL SCREEN COVER =====
local fullScreenCover = Instance.new("Frame")
fullScreenCover.Size = UDim2.new(1, 0, 1, 0)
fullScreenCover.Position = UDim2.new(0, 0, 0, 0)
fullScreenCover.BackgroundColor3 = Color3.fromRGB(5, 10, 20)
fullScreenCover.BackgroundTransparency = 1  -- MAKE LOADING SCREEN BACKGROUND TRANSPARENT!
fullScreenCover.BorderSizePixel = 0
fullScreenCover.ZIndex = 1
fullScreenCover.Parent = finalLoadingScreen

-- [REST OF YOUR LOADING SCREEN CODE REMAINS EXACTLY THE SAME...]
-- Animated gradient background (now visible because parent is transparent)
local bgGradient = Instance.new("UIGradient")
bgGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(5, 10, 25)),
    ColorSequenceKeypoint.new(0.3, Color3.fromRGB(10, 15, 40)),
    ColorSequenceKeypoint.new(0.6, Color3.fromRGB(15, 25, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(5, 10, 25))
})
bgGradient.Rotation = 45
bgGradient.Parent = fullScreenCover

-- Sci-fi grid pattern
local gridPattern = Instance.new("Frame")
gridPattern.Size = UDim2.new(1, 0, 1, 0)
gridPattern.Position = UDim2.new(0, 0, 0, 0)
gridPattern.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
gridPattern.BackgroundTransparency = 0.8
gridPattern.BorderSizePixel = 0
gridPattern.ZIndex = 2
gridPattern.Parent = fullScreenCover

-- Grid lines (horizontal)
for i = 1, 20 do
    local line = Instance.new("Frame")
    line.Size = UDim2.new(1, 0, 0, 1)
    line.Position = UDim2.new(0, 0, (i-1)/19, 0)
    line.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    line.BackgroundTransparency = 0.7
    line.BorderSizePixel = 0
    line.ZIndex = 3
    line.Parent = gridPattern
end

-- Grid lines (vertical)
for i = 1, 30 do
    local line = Instance.new("Frame")
    line.Size = UDim2.new(0, 1, 1, 0)
    line.Position = UDim2.new((i-1)/29, 0, 0, 0)
    line.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    line.BackgroundTransparency = 0.7
    line.BorderSizePixel = 0
    line.ZIndex = 3
    line.Parent = gridPattern
end

-- Floating particles
local particles = Instance.new("Frame")
particles.Size = UDim2.new(1, 0, 1, 0)
particles.Position = UDim2.new(0, 0, 0, 0)
particles.BackgroundTransparency = 1
particles.ZIndex = 4
particles.Parent = fullScreenCover

-- Create multiple floating particles
for i = 1, 15 do
    local particle = Instance.new("Frame")
    particle.Size = UDim2.new(0, math.random(3, 8), 0, math.random(3, 8))
    particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
    particle.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
    particle.BackgroundTransparency = 0.6
    particle.BorderSizePixel = 0
    particle.ZIndex = 4
    particle.Parent = particles
    
    local particleCorner = Instance.new("UICorner")
    particleCorner.CornerRadius = UDim.new(1, 0)
    particleCorner.Parent = particle
end

-- Sci-fi glow effect
local glowEffect = Instance.new("Frame")
glowEffect.Size = UDim2.new(1, 0, 1, 0)
glowEffect.Position = UDim2.new(0, 0, 0, 0)
glowEffect.BackgroundColor3 = Color3.fromRGB(0, 100, 255)
glowEffect.BackgroundTransparency = 0.95
glowEffect.BorderSizePixel = 0
glowEffect.ZIndex = 5
glowEffect.Parent = fullScreenCover

-- ===== MAIN CONTENT CONTAINER =====
local mainContainer = Instance.new("Frame")
mainContainer.Size = UDim2.new(0.6, 0, 0.5, 0)
mainContainer.Position = UDim2.new(0.2, 0, 0.25, 0)
mainContainer.BackgroundColor3 = Color3.fromRGB(15, 20, 35)
mainContainer.BackgroundTransparency = 0.1
mainContainer.BorderSizePixel = 0
mainContainer.ZIndex = 10
mainContainer.Parent = finalLoadingScreen

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0.03, 0)
mainCorner.Parent = mainContainer

-- Container border with glow
local containerStroke = Instance.new("UIStroke")
containerStroke.Color = Color3.fromRGB(0, 150, 255)
containerStroke.Thickness = 2
containerStroke.Parent = mainContainer

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0.15, 0)
title.Position = UDim2.new(0, 0, 0.05, 0)
title.BackgroundTransparency = 1
title.Text = "BLOX FRUITS"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamBlack
title.TextStrokeTransparency = 0.8
title.TextStrokeColor3 = Color3.fromRGB(0, 100, 200)
title.ZIndex = 12
title.Parent = mainContainer

-- Subtitle
local subtitle = Instance.new("TextLabel")
subtitle.Size = UDim2.new(1, 0, 0.1, 0)
subtitle.Position = UDim2.new(0, 0, 0.18, 0)
subtitle.BackgroundTransparency = 1
subtitle.Text = "Final Stage of Loading"
subtitle.TextColor3 = Color3.fromRGB(200, 200, 255)
subtitle.TextScaled = true
subtitle.Font = Enum.Font.Gotham
subtitle.ZIndex = 12
subtitle.Parent = mainContainer

-- Status
local statusContainer = Instance.new("Frame")
statusContainer.Size = UDim2.new(0.9, 0, 0.08, 0)
statusContainer.Position = UDim2.new(0.05, 0, 0.3, 0)
statusContainer.BackgroundColor3 = Color3.fromRGB(20, 25, 40)
statusContainer.BackgroundTransparency = 0.3
statusContainer.BorderSizePixel = 0
statusContainer.ZIndex = 11
statusContainer.Parent = mainContainer

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0.02, 0)
statusCorner.Parent = statusContainer

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0.25, 0, 1, 0)
statusLabel.Position = UDim2.new(0.02, 0, 0, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Status:"
statusLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
statusLabel.TextScaled = true
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Font = Enum.Font.Gotham
statusLabel.ZIndex = 12
statusLabel.Parent = statusContainer

local statusValue = Instance.new("TextLabel")
statusValue.Size = UDim2.new(0.7, 0, 1, 0)
statusValue.Position = UDim2.new(0.27, 0, 0, 0)
statusValue.BackgroundTransparency = 1
statusValue.Text = "Initializing core systems..."
statusValue.TextColor3 = Color3.fromRGB(0, 200, 255)
statusValue.TextScaled = true
statusValue.TextXAlignment = Enum.TextXAlignment.Left
statusValue.Font = Enum.Font.GothamBold
statusValue.ZIndex = 12
statusValue.Parent = statusContainer

-- Loading Details Container
local detailsContainer = Instance.new("Frame")
detailsContainer.Size = UDim2.new(0.9, 0, 0.35, 0)
detailsContainer.Position = UDim2.new(0.05, 0, 0.4, 0)
detailsContainer.BackgroundColor3 = Color3.fromRGB(20, 25, 40)
detailsContainer.BackgroundTransparency = 0.3
detailsContainer.BorderSizePixel = 0
detailsContainer.ZIndex = 11
detailsContainer.Parent = mainContainer

local detailsCorner = Instance.new("UICorner")
detailsCorner.CornerRadius = UDim.new(0.02, 0)
detailsCorner.Parent = detailsContainer

local detailsTitle = Instance.new("TextLabel")
detailsTitle.Size = UDim2.new(1, 0, 0.2, 0)
detailsTitle.Position = UDim2.new(0, 0, 0, 0)
detailsTitle.BackgroundTransparency = 1
detailsTitle.Text = "LOADING DETAILS"
detailsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
detailsTitle.TextScaled = true
detailsTitle.Font = Enum.Font.GothamBold
detailsTitle.ZIndex = 12
detailsTitle.Parent = detailsContainer

local detailsText = Instance.new("TextLabel")
detailsText.Size = UDim2.new(0.95, 0, 0.75, 0)
detailsText.Position = UDim2.new(0.025, 0, 0.2, 0)
detailsText.BackgroundTransparency = 1
detailsText.Text = "> Loading sound assets...\n> Initializing game mechanics..."
detailsText.TextColor3 = Color3.fromRGB(0, 255, 150)
detailsText.TextXAlignment = Enum.TextXAlignment.Left
detailsText.TextYAlignment = Enum.TextYAlignment.Top
detailsText.TextSize = 16
detailsText.Font = Enum.Font.Code
detailsText.TextWrapped = true
detailsText.ZIndex = 12
detailsText.Parent = detailsContainer

-- Message display area (for sequential text)
local messageContainer = Instance.new("Frame")
messageContainer.Size = UDim2.new(0.9, 0, 0.25, 0)
messageContainer.Position = UDim2.new(0.05, 0, 0.77, 0)
messageContainer.BackgroundColor3 = Color3.fromRGB(20, 25, 40)
messageContainer.BackgroundTransparency = 0.3
messageContainer.BorderSizePixel = 0
messageContainer.ZIndex = 11
messageContainer.Visible = false
messageContainer.Parent = mainContainer

local messageCorner = Instance.new("UICorner")
messageCorner.CornerRadius = UDim.new(0.02, 0)
messageCorner.Parent = messageContainer

local messageText = Instance.new("TextLabel")
messageText.Size = UDim2.new(0.95, 0, 0.9, 0)
messageText.Position = UDim2.new(0.025, 0, 0.05, 0)
messageText.BackgroundTransparency = 1
messageText.Text = ""
messageText.TextColor3 = Color3.fromRGB(255, 255, 150)
messageText.TextXAlignment = Enum.TextXAlignment.Left
messageText.TextYAlignment = Enum.TextYAlignment.Top
messageText.TextSize = 14
messageText.Font = Enum.Font.Gotham
messageText.TextWrapped = true
messageText.ZIndex = 12
messageText.Parent = messageContainer

-- Loading bar (hidden initially)
local loadingBarContainer = Instance.new("Frame")
loadingBarContainer.Size = UDim2.new(0.9, 0, 0.08, 0)
loadingBarContainer.Position = UDim2.new(0.05, 0, 0.77, 0)
loadingBarContainer.BackgroundColor3 = Color3.fromRGB(25, 30, 45)
loadingBarContainer.BackgroundTransparency = 0.3
loadingBarContainer.BorderSizePixel = 0
loadingBarContainer.ZIndex = 11
loadingBarContainer.Visible = false
loadingBarContainer.Parent = mainContainer

local loadingBarCorner = Instance.new("UICorner")
loadingBarCorner.CornerRadius = UDim.new(0.02, 0)
loadingBarCorner.Parent = loadingBarContainer

local loadingBarBg = Instance.new("Frame")
loadingBarBg.Size = UDim2.new(0.95, 0, 0.5, 0)
loadingBarBg.Position = UDim2.new(0.025, 0, 0.25, 0)
loadingBarBg.BackgroundColor3 = Color3.fromRGB(30, 35, 50)
loadingBarBg.BorderSizePixel = 0
loadingBarBg.ZIndex = 11
loadingBarBg.Parent = loadingBarContainer

local loadingBgCorner = Instance.new("UICorner")
loadingBgCorner.CornerRadius = UDim.new(0.08, 0)
loadingBgCorner.Parent = loadingBarBg

local loadingBar = Instance.new("Frame")
loadingBar.Size = UDim2.new(0, 0, 1, 0)
loadingBar.Position = UDim2.new(0, 0, 0, 0)
loadingBar.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
loadingBar.BorderSizePixel = 0
loadingBar.ZIndex = 12
loadingBar.Parent = loadingBarBg

local loadingBarFillCorner = Instance.new("UICorner")
loadingBarFillCorner.CornerRadius = UDim.new(0.08, 0)
loadingBarFillCorner.Parent = loadingBar

local percentText = Instance.new("TextLabel")
percentText.Size = UDim2.new(1, 0, 0.4, 0)
percentText.Position = UDim2.new(0, 0, 0.55, 0)
percentText.BackgroundTransparency = 1
percentText.Text = "0%"
percentText.TextColor3 = Color3.fromRGB(255, 255, 255)
percentText.TextScaled = true
percentText.Font = Enum.Font.GothamBlack
percentText.ZIndex = 12
percentText.Parent = loadingBarContainer

print("Both GUIs created - black screen with enhanced click blockers in back, loading screen on top!")

-- ===== START ALL BLOCKING SYSTEMS =====
-- Start aggressive UI blocking
spawn(aggressiveUIBlocking)

-- Disable leaderboard and other core elements
disableLeaderboard()

-- ===== SOUND BLOCKER CODE =====
local soundBlockEnabled = true
local soundConnections = {}

local function enableSoundBlock()
    -- Disconnect existing connections
    for _, conn in pairs(soundConnections) do
        if conn then
            conn:Disconnect()
        end
    end
    
    -- Reconnect all the blocking functions
    soundConnections.descendantAdded = game.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("Sound") and soundBlockEnabled then
            pcall(function()
                descendant.Volume = 0
                descendant.Playing = false
            end)
        end
    end)
    
    soundConnections.heartbeat = RunService.Heartbeat:Connect(function()
        if soundBlockEnabled then
            pcall(function()
                for i, v in pairs(workspace:GetDescendants()) do
                    if v:IsA("Sound") and v.Volume > 0 then
                        v.Volume = 0
                    end
                end
            end)
        end
    end)
end

-- Toggle with P key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.P and not gameProcessed then
        soundBlockEnabled = not soundBlockEnabled
        if soundBlockEnabled then
            print("Sound Blocking ENABLED")
        else
            print("Sound Blocking DISABLED")
        end
    end
end)

-- Start blocking
enableSoundBlock()

-- Deep scan loop for sound blocking
spawn(function()
    while wait(3) do
        if soundBlockEnabled then
            pcall(function()
                for i, v in pairs(game:GetDescendants()) do
                    if v:IsA("Sound") then
                        v.Volume = 0
                        if v.Playing then
                            v.Playing = false
                        end
                    end
                end
            end)
        end
    end
end)

print("Sound Blocker Activated!")

-- ===== LOADING SEQUENCE =====
local loadingProgress = 0
local currentStep = 0
local totalLoadTime = 300 -- 5 minutes

-- Text messages to display sequentially
local textMessages = {
    "Hello! The script is almost done loading we just need to do some extra steps.",
    "During the last stage of loading- PLEASE, do not leave the game or it could result in data loss.",
    "well yeah. thats all you need to know. Now- Just wait."
}

-- Technical messages for loading details
local technicalMessages = {
    "> Loading sound assets...",
    "> Initializing game mechanics...",
    "> Preparing spawn locations...",
    "> Loading game maps...",
    "> Setting up player controls...",
    "> Finalizing system checks...",
    "> System ready for launch..."
}

-- Function to show text messages sequentially
local function showTextSequence()
    messageContainer.Visible = true
    loadingBarContainer.Visible = false
    
    for i, message in ipairs(textMessages) do
        messageText.Text = message
        currentStep = i
        statusValue.Text = "Displaying message " .. i .. "/" .. #textMessages
        wait(3)
    end
    
    -- After all messages, show loading bar
    messageContainer.Visible = false
    loadingBarContainer.Visible = true
    statusValue.Text = "Finalizing systems..."
end

-- Loading animation
local startTime = tick()
local messageTimer = 0
local currentMessageIndex = 1

local connection = RunService.Heartbeat:Connect(function(deltaTime)
    local currentTime = tick() - startTime
    
    -- Animate background elements
    bgGradient.Offset = Vector2.new(math.sin(tick() * 0.3) * 0.2, math.cos(tick() * 0.2) * 0.1)
    
    -- Animate particles
    for i, particle in pairs(particles:GetChildren()) do
        if particle:IsA("Frame") then
            local xPos = math.sin(tick() * 0.5 + i) * 0.1 + 0.5
            local yPos = math.cos(tick() * 0.3 + i) * 0.1 + 0.5
            particle.Position = UDim2.new(xPos, 0, yPos, 0)
        end
    end
    
    -- Update loading progress after text sequence (5 minutes total)
    if currentStep >= #textMessages then
        if loadingProgress < 100 then
            loadingProgress = loadingProgress + (deltaTime * (100 / totalLoadTime))
            if loadingProgress > 100 then
                loadingProgress = 100
            end
        end
        
        -- Update loading bar
        loadingBar.Size = UDim2.new(loadingProgress/100, 0, 1, 0)
        percentText.Text = string.format("%d%%", math.floor(loadingProgress))
        
        -- Update technical log (every 1.5 seconds)
        messageTimer = messageTimer + deltaTime
        if messageTimer > 1.5 and currentMessageIndex <= #technicalMessages then
            local messagesToShow = ""
            local startIndex = math.max(1, currentMessageIndex - 3)
            for i = startIndex, currentMessageIndex do
                if i <= #technicalMessages then
                    messagesToShow = messagesToShow .. technicalMessages[i] .. "\n"
                end
            end
            detailsText.Text = messagesToShow
            
            currentMessageIndex = currentMessageIndex + 1
            if currentMessageIndex > #technicalMessages then
                currentMessageIndex = 1
            end
            messageTimer = 0
        end
        
        -- Update status based on progress
        if loadingProgress < 20 then
            statusValue.Text = "Initializing core systems..."
        elseif loadingProgress < 40 then
            statusValue.Text = "Loading game resources..."
        elseif loadingProgress < 60 then
            statusValue.Text = "Compiling scripts..."
        elseif loadingProgress < 80 then
            statusValue.Text = "Setting up environment..."
        elseif loadingProgress < 95 then
            statusValue.Text = "Finalizing systems..."
        else
            statusValue.Text = "Ready to launch!"
        end
        
        -- Complete loading
        if loadingProgress >= 100 then
            connection:Disconnect()
            statusValue.Text = "Complete! Launching..."
            
            -- Wait a moment then remove both loading screens
            wait(3)
            finalLoadingScreen:Destroy()
            screenGui:Destroy()  -- Also remove the black background
            print("Final stage loading complete! All overlays removed.")
        end
    end
end)

-- Start the loading sequence
spawn(showTextSequence)

print("Loading Sequence Started!")
print("Enhanced blocking systems activated - 3-line menu and leaderboard should be completely blocked!")
end
